[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "citetube"
dynamic = ["version"]
description = "Local YouTube Transcript QA Application"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "CiteTube Team"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.8"
dependencies = [
    "gradio>=5.0.0",
    "python-dotenv>=1.0.0",
    "psycopg2-binary>=2.9.0",
    "pgvector>=0.4.0",
    "youtube-transcript-api>=0.6.0",
    "vllm>=0.6.0",
    "openai>=1.0.0",
    "sentence-transformers>=2.2.0",
    "rank-bm25>=0.2.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "typer>=0.9.0",
    "rich>=13.0.0",
    "loguru>=0.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "ruff>=0.1.0",
]

[project.scripts]
citetube = "citetube.ui.app:launch_app"
citetube-cli = "main:app"
citetube-start = "scripts.start:app"

[project.urls]
Homepage = "https://github.com/yourusername/citetube"
Repository = "https://github.com/yourusername/citetube"
Issues = "https://github.com/yourusername/citetube/issues"

[tool.setuptools_scm]
write_to = "src/citetube/_version.py"

[tool.setuptools.packages.find]
where = ["src"]

[tool.ruff]
target-version = "py38"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]